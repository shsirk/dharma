%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: Dharma-Grammar
file_extensions:
  - dg
scope: source.c, source.c++
contexts:
  main:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '"'
      scope: punctuation.definition.string.begin.example-c
      push: double_quoted_string

    # Comments begin with a '//' and finish at the end of the line
    - match: '%%%'
      scope: punctuation.definition.comment.example-c
      push: line_comment

    # Keywords are if, else for and while.
    # Note that blackslashes don't need to be escaped within single quoted
    # strings in YAML. When using single quoted strings, only single quotes
    # need to be escaped: this is done by using two single quotes next to each
    # other.
    - match: '^%section% := (value|variable|variance)'
      scope: punctuation.separator.continuation.c

    - match: '^[\w\d_]+'
      scope: storage.type.template.c++

    - match: '\+[\w\d_]+\+'
      scope: keyword.control.example-c

    - match: '%(repeat|const|range|uri|block|choice)%'
      scope: constant.language.c

    - match: '\+[\w\d_]+:[\w\d_]+\+'
      scope: keyword.control.import

    - match: '![\w\d_]+!'
      scope: keyword.control.import

    - match: '\@[\w\d_]+\@'
      scope: keyword.control.import

  double_quoted_string:
    - meta_scope: string.quoted.double.example-c
    - match: '\\.'
      scope: constant.character.escape.example-c
    - match: '"'
      scope: punctuation.definition.string.end.example-c
      pop: true

  line_comment:
    - meta_scope: comment.line.example-c
    - match: $
      pop: true
